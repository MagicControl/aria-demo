{"version":3,"file":"static/webpack/static/development/pages/index.js.2cf3b9cd94b88c6dafc7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useState } from 'react';\n\nimport { useADAInput } from '../shared/hooks/input';\nimport { Checkbox } from '../shared/components/Checkbox';\nimport { Input } from '../shared/components/Input';\nimport { Dropdown } from '../shared/components/Dropdown';\nimport { withGA, withClickTracking } from '../shared/libs/ga';\nimport { Button } from '../shared/components/Button';\n\nconst TrackedButton = withClickTracking(Button, 'click', {\n    event_category: 'test',\n    event_label: 'bla-bla',\n    value: 'hi',\n});\n\nconst Page = () => {\n    const [checked, setChecked] = useADAInput(false, state => !state);\n    const [dropdownValue, setDropdownValue] = useState(null);\n\n    const selectValue = value => setDropdownValue(value);\n\n    return (\n        <>\n            <div className=\"container\">\n                <header>\n                    <h1 tabIndex=\"0\">Welcome to ARIA demo.</h1>\n                </header>\n\n                {/* <TrackedButton onClick={() => console.log('Hi')} /> */}\n                <article tabIndex=\"0\">\n                    <p>\n                        Accessible Rich Internet Applications (ARIA) is a set of\n                        attributes that define ways to make web content and web\n                        applications (especially those developed with\n                        JavaScript) more accessible to people with disabilities.\n                    </p>\n                </article>\n                <section>\n                    <header>\n                        <h2 tabIndex=\"0\">\n                            Simple case. Using aria attributes to label a\n                            component.\n                        </h2>\n                    </header>\n\n                    <div>\n                        <h3>Variant one:</h3>\n                        <Input label=\"This component was labeled by aria-label\" />\n                    </div>\n                    <div>\n                        <h3>Variant two:</h3>\n                        <Input\n                            id=\"1\"\n                            label=\"This component was labeled by aria-labelledby\"\n                        />\n                    </div>\n                </section>\n                <section>\n                    <h2 tabIndex=\"0\">\n                        Complex case. Using aria attributes to create custom\n                        controls.\n                    </h2>\n                    <div>\n                        <h3>Custom checkbox.</h3>\n                        <Checkbox\n                            checked={checked}\n                            label=\"This checkbox was made using role and aria- attributes\"\n                            onChange={setChecked}\n                        />\n                    </div>\n                    <Dropdown\n                        values={[11, 22, 33, 44]}\n                        selectedValue={dropdownValue}\n                        label=\"custom dropdown\"\n                        setValue={selectValue}\n                    />\n                </section>\n                <a href=\"https://w3c.github.io/using-aria/\">\n                    See more on w3c.github.io\n                </a>\n                <style jsx global>{`\n                    body {\n                        background-color: #bc986a;\n                        box-sizing: border-box;\n                    }\n\n                    .container {\n                        width: 1024px;\n                        margin: 0 auto;\n                    }\n                `}</style>\n            </div>\n        </>\n    );\n};\n\nexport default withGA(Page, 'My index page');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtDA;AAAA;AAAA;AAuEA;AACA;AACA;;;;A","sourceRoot":""}